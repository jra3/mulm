include header.pug

doctype html
html

	+headTag(title)

	body.bg-white.text-gray-800
		+pageHeader(true, title, subtitle)

		include bapForm/form.pug

		script.
			function initStaticMultiSelects() {
				document.querySelectorAll("select.tom-select-multi").forEach((select) => {
					if (select.tomselect) {
						select.tomselect.destroy();
					}
					new TomSelect(select, {
						hideSelected: true,
						create: true,
					});
				});
			}

			function initializeTypeaheads() {
				const typeaheadElements = document.querySelectorAll('select.tom-select-typeahead:not(.tomselected)');
				typeaheadElements.forEach(function(element) {
					const config = getTypeaheadConfig(element);
					const tomSelectOptions = buildTomSelectOptions(element, config);
					const tomSelect = new TomSelect(element, tomSelectOptions);
					// Store reference for potential cleanup
					element.tomSelectInstance = tomSelect;
					// Add class for single-value styling
					if (config.maxItems === 1) {
						tomSelect.control.classList.add('single-value');
					}
				});
			}

			document.addEventListener("htmx:load", function () {
				initStaticMultiSelects();
				initializeTypeaheads();
			});

			// Debugging the onChange events
			document.addEventListener("typeahead:change", function (e) {
				console.log(e);
			});

			document.addEventListener("DOMContentLoaded", function () {
				initStaticMultiSelects();
				initializeTypeaheads();

				document.querySelectorAll("input, textarea, select").forEach((el) => {
					if (el.name && sessionStorage.getItem(el.name) != undefined) {
						if (el.type === "checkbox") {
							el.checked = sessionStorage.getItem(el.name) === "true";
						} else {
							el.value = sessionStorage.getItem(el.name);
						}
					}
				})
			});

