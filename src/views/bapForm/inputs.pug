mixin bapTextInput(labelText, name, placeholder, type="text")
	.flex.flex-col.gap-2
		label.input-label(for=name)= labelText
			if errors.has(name)
				span(class="font-extrabold text-red-400")= ` ${errors.get(name)}`

		input.text-input(
			id=name
			value=form[name] || ""
			name=name
			type=type
			placeholder=placeholder
			class=errors.has(name) ? "error" : ""
			disabled=attributes.disabled)
		if attributes.disabled
			input.text-input(
				value=form[name]
				name=name
				type="hidden")


mixin bapSimpleSelectInput(labelText, name)
	.flex.flex-col.gap-2
		label.input-label(for=name)= labelText
		.select-wrapper
			select(name=name)
				block


mixin bapMultiSelectInput(labelText, name, id)
	.flex.flex-col.gap-2
		label.input-label(for=name)= labelText
			if errors.has(name)
				span(class="font-extrabold text-red-400")= ` ${errors.get(name)}`

		select.tom-select-multi(
			id=id
			name=name
			multiple
			value=form[name]
			class=errors.has(name) ? "error" : "")
			block

mixin bapTypeaheadInput(labelText, name, placeholder, apiUrl, linkedField)
	.flex.flex-col.gap-2
		label.input-label(for=name)= labelText
			if errors.has(name)
				span(class="font-extrabold text-red-400")= ` ${errors.get(name)}`

		select.tom-select-typeahead(
			id=name
			name=name
			data-api-url=apiUrl
			data-linked-field=linkedField
			autocomplete="off"
			class=errors.has(name) ? "error" : ""
			disabled=attributes.disabled)
			if form[name]
				option(value=form[name] selected)= form[name]
		if attributes.disabled
			input.text-input(
				value=form[name]
				name=name
				type="hidden")

mixin htmxTypeahead(options = {})
	- const name = options.name
	- const label = options.label
	- const apiUrl = options.apiUrl
	- const placeholder = options.placeholder || ''
	- const valueField = options.valueField || 'value'
	- const labelField = options.labelField || 'text'
	- const searchFields = options.searchFields || 'text'
	- const minQueryLength = options.minQueryLength || 2
	- const maxItems = options.maxItems || 1
	- const allowCreate = options.allowCreate !== false
	- const linkedField = options.linkedField
	- const linkField = options.linkField || 'value'
	- const secondaryField = options.secondaryField
	- const optionTemplate = options.optionTemplate
	- const htmxTarget = options.htmxTarget
	- const htmxTrigger = options.htmxTrigger
	- const htmxSwap = options.htmxSwap || 'innerHTML'
	- const loadingClass = options.loadingClass || 'loading'
	- const debounceMs = options.debounceMs || 300
	- const extraParams = options.extraParams || {}
	- const required = options.required || false
	- const disabled = options.disabled || false
	- const className = options.className || ''
	- const value = options.value || ''

	- const errorClass = (errors && errors.has && errors.has(name)) ? 'error' : '';
	- const finalClass = `tom-select-typeahead ${className} ${errorClass}`.trim();
	- const finalValue = (form && form[name]) || value;

	.flex.flex-col.gap-2
		if label
			label.input-label(for=name)= label
				if errors && errors.has && errors.has(name)
					span(class="font-extrabold text-red-400")= ` ${errors.get(name)}`

		select(
			id=name
			name=name
			class=finalClass
			data-api-url=apiUrl
			data-value-field=valueField
			data-label-field=labelField
			data-search-fields=searchFields
			data-min-query-length=minQueryLength
			data-max-items=maxItems
			data-allow-create=allowCreate
			data-placeholder=placeholder
			data-loading-class=loadingClass
			data-debounce-ms=debounceMs
			autocomplete="off"
			required=required
			disabled=disabled
		)
			if finalValue
				option(value=finalValue selected)= finalValue

		if disabled && finalValue
			input(type="hidden" name=name value=finalValue)
