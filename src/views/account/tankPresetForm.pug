//- Tank Preset Form (for both create and edit)
//- Local mixin for form fields to reduce repetition
mixin formField(name, labelText, placeholder, value, required=false)
	.mb-3
		label.block.text-sm.font-medium.text-gray-700.mb-1(for=name)= labelText
			if required
				|  *
		input.w-full.px-3.py-2.border.border-gray-300.rounded(
			type="text"
			name=name
			id=name
			placeholder=placeholder
			value=value || ''
			required=required
			class=errors && errors.has(name) ? 'border-2 border-red-500' : ''
			aria-invalid=errors && errors.has(name) ? 'true' : 'false'
		)
		if errors && errors.has(name)
			p.text-red-600.text-sm.mt-1.font-medium= errors.get(name)

//- Local mixin for grid form fields (2-column layout)
mixin gridFormField(name, labelText, placeholder, value)
	div
		label.block.text-sm.font-medium.text-gray-700.mb-1(for=name)= labelText
		input.w-full.px-3.py-2.border.border-gray-300.rounded(
			type="text"
			name=name
			id=name
			placeholder=placeholder
			value=value || ''
		)

.bg-white.border.border-gray-300.rounded-lg.p-4.mb-3(class=editing ? 'tank-preset-card' : '')
	form(
		hx-post="/account/tanks"
		hx-target=editing ? 'closest .tank-preset-card' : '#tankPresetsContent'
		hx-swap=editing ? 'outerHTML' : 'afterbegin'
	)
		h3.font-bold.text-lg.mb-4= editing ? `Edit: ${preset.preset_name}` : 'New Tank Preset'

		//- General form error (if any)
		if errors.has('form')
			.bg-red-50.border.border-red-200.text-red-800.px-4.py-3.rounded.mb-3= errors.get('form')

		//- Preset Name (read-only when editing, or editable for new)
		if editing
			.mb-3
				label.block.text-sm.font-medium.text-gray-700.mb-1(for="preset_name") Tank Name *
				input.w-full.px-3.py-2.border.border-gray-300.rounded.bg-gray-100(
					type="text"
					value=preset.preset_name
					disabled
				)
				input(type="hidden" name="preset_name" value=preset.preset_name)
				input(type="hidden" name="editing" value="true")
		else
			+formField('preset_name', 'Tank Name', 'e.g., Community Tank, Breeding Tank', preset.preset_name, true)

		//- Tank parameters grid
		.grid.grid-cols-1.gap-3(class="sm:grid-cols-2")
			+gridFormField('tank_size', 'Tank Size', 'e.g., 20 gallons, 75L', preset.tank_size)
			+gridFormField('filter_type', 'Filter Type', 'e.g., Sponge, HOB, Canister', preset.filter_type)
			+gridFormField('temperature', 'Temperature', 'e.g., 78°F, 25°C', preset.temperature)
			+gridFormField('ph', 'pH', 'e.g., 7.0', preset.ph)
			+gridFormField('gh', 'General Hardness (GH)', 'e.g., 150 ppm', preset.gh)
			+gridFormField('specific_gravity', 'Specific Gravity', 'e.g., 1.025 (for marine)', preset.specific_gravity)
			+gridFormField('water_change_volume', 'Water Change Volume', 'e.g., 25%, 10 gallons', preset.water_change_volume)
			+gridFormField('water_change_frequency', 'Change Frequency', 'e.g., Weekly, Every 3 days', preset.water_change_frequency)
			+gridFormField('substrate_type', 'Substrate Type', 'e.g., Gravel, Sand', preset.substrate_type)
			+gridFormField('substrate_depth', 'Substrate Depth', 'e.g., 2 inches', preset.substrate_depth)
			+gridFormField('substrate_color', 'Substrate Color', 'e.g., Black, Natural', preset.substrate_color)

		//- Submit buttons
		.mt-4.flex.gap-2
			button.primary(type="submit" hx-disabled-elt="this")
				span= editing ? 'Update Preset' : 'Create Preset'
				span.htmx-indicator.spinner
			if editing
				button.secondary(
					type="button"
					hx-get=`/account/tanks/${encodeURIComponent(preset.preset_name)}`
					hx-target="closest .tank-preset-card"
					hx-swap="outerHTML"
				) Cancel
			else
				button.secondary(
					type="button"
					onclick="document.getElementById('newPresetForm').classList.add('hidden'); this.closest('form').reset();"
				) Cancel
